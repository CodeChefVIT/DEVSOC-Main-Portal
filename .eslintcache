[{"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\index.js":"1","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\App.jsx":"2","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\GoogleOAuth\\GoogleOAuth.js":"3","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\App\\AppMain.js":"4","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Landing\\Landing.jsx":"5","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\JoinInvite\\JoinInvite.jsx":"6","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\AllTeams\\AllTeams.jsx":"7","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Error404\\Error404.jsx":"8","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\TeamDetails\\TeamDetails.jsx":"9","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\Loading\\Loading.js":"10","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Team\\Team.jsx":"11","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\ProfileSection\\ProfileSection.jsx":"12","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Dashboard\\Dashboard.jsx":"13","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\FinalSubmission\\FinalSubmission.jsx":"14","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\SubmitSection\\SubmitSection.jsx":"15","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\BottomNav\\BottomNav.jsx":"16","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\TopNav\\TopNav.jsx":"17","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\TeamCard\\TeamCard.jsx":"18","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\ProjectSubmission\\ProjectSubmission.jsx":"19","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\IdeaSubmission\\IdeaSubmission.jsx":"20","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\TextInput\\TextInput.jsx":"21","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Profile\\Profile.jsx":"22","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\ProfileEdit\\ProfileEdit.jsx":"23","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\JoinTeamModal\\JoinTeamModal.jsx":"24","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\RemoveMemberModal\\RemoveMember.jsx":"25","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\InviteModal\\InviteModal.jsx":"26","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\CreateTeamModal\\CreateTeamModal.jsx":"27"},{"size":416,"mtime":1647432176239,"results":"28","hashOfConfig":"29"},{"size":1591,"mtime":1647432176024,"results":"30","hashOfConfig":"29"},{"size":640,"mtime":1647432176092,"results":"31","hashOfConfig":"29"},{"size":5996,"mtime":1647432176067,"results":"32","hashOfConfig":"29"},{"size":2086,"mtime":1647716750977,"results":"33","hashOfConfig":"29"},{"size":688,"mtime":1647432176109,"results":"34","hashOfConfig":"29"},{"size":3043,"mtime":1647779347283,"results":"35","hashOfConfig":"29"},{"size":674,"mtime":1647432176074,"results":"36","hashOfConfig":"29"},{"size":1977,"mtime":1647716751012,"results":"37","hashOfConfig":"29"},{"size":236,"mtime":1647432176043,"results":"38","hashOfConfig":"29"},{"size":7938,"mtime":1647774457678,"results":"39","hashOfConfig":"29"},{"size":690,"mtime":1647432176197,"results":"40","hashOfConfig":"29"},{"size":4481,"mtime":1647778126097,"results":"41","hashOfConfig":"29"},{"size":15520,"mtime":1647447125935,"results":"42","hashOfConfig":"29"},{"size":761,"mtime":1647432176217,"results":"43","hashOfConfig":"29"},{"size":11731,"mtime":1647779446568,"results":"44","hashOfConfig":"29"},{"size":4581,"mtime":1647447125673,"results":"45","hashOfConfig":"29"},{"size":2228,"mtime":1647432176052,"results":"46","hashOfConfig":"29"},{"size":9373,"mtime":1647432176200,"results":"47","hashOfConfig":"29"},{"size":10473,"mtime":1647725208034,"results":"48","hashOfConfig":"29"},{"size":753,"mtime":1647447125667,"results":"49","hashOfConfig":"29"},{"size":4166,"mtime":1647778326467,"results":"50","hashOfConfig":"29"},{"size":22181,"mtime":1647723448007,"results":"51","hashOfConfig":"29"},{"size":3090,"mtime":1647770701433,"results":"52","hashOfConfig":"29"},{"size":3545,"mtime":1647775628249,"results":"53","hashOfConfig":"29"},{"size":4968,"mtime":1647432176037,"results":"54","hashOfConfig":"29"},{"size":2956,"mtime":1647447125664,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"3pdpoi",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"58"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"58"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"58"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"58"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\index.js",[],["117","118"],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\App.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\GoogleOAuth\\GoogleOAuth.js",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\App\\AppMain.js",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Landing\\Landing.jsx",["119","120"],"import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./Landing.css\";\r\nimport logo from '../../assets/logo.png'\r\nimport text from \"./Landing.png\";\r\nimport salty from \"./landing-bg.png\";\r\n\r\nfunction Landing() {\r\n  const history = useHistory();\r\n  const handleButton = async () => {\r\n    console.log(\"clicked\");\r\n    const url = `${process.env.REACT_APP_BACKEND_URL}/auth/getUrl`;\r\n    try {\r\n      await axios.get(url).then((res) => {\r\n        console.log(res);\r\n        window.location.href = res.data.data;\r\n      });\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem(\"authToken\");\r\n    if (token && token !== \"\") {\r\n      history.replace(\"/app/dashboard\");\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n       <img\r\n        style={{\r\n          height: \"100%\",\r\n          margin: \"0\",\r\n          width: \"100%\",\r\n          padding: \"0\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          right: \"0\",\r\n          zIndex: -1,\r\n        }}\r\n        src={salty}\r\n        alt={\"\"}\r\n        className=\"From-img\"\r\n      />\r\n      <div className=\"dev-container\">\r\n        <img className=\"logo\" src={logo}></img>\r\n        <div>\r\n          <div className=\"devsoc\">\r\n          <h1 className=\"heading1\">\r\n            DEVSOC <span style={{ color: \"#37ABBC\" }}>‘22</span>\r\n          </h1>\r\n          <img src={text} className=\"logo2\"></img>\r\n          <div className=\"google-link\">\r\n            <div className=\"google-btn\" onClick={handleButton}>\r\n              <div className=\"google-icon-wrapper\">\r\n                <img className=\"google-icon\" src=\"/assets/gbtn.png\" alt=\"google\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <h1 className=\"devsoc21 ds-landing\">DEVSOC'22</h1> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\JoinInvite\\JoinInvite.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\AllTeams\\AllTeams.jsx",["121","122","123"],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Error404\\Error404.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\TeamDetails\\TeamDetails.jsx",["124","125","126"],"import { Container, Grid, Hidden } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./TeamDetails.css\";\r\nimport salty from \"./TeamDetails.png\";\r\nimport logo from './DEVSOCLogo.png';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TeamDetails = () => {\r\n  return (\r\n    \r\n    <div className=\"team-details\">\r\n       <img\r\n        style={{\r\n          height: \"100vh\",\r\n          margin: \"0\",\r\n          width: \"100vw\",\r\n          padding: \"0\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          right: \"0\",\r\n          zIndex: -1,\r\n        }}\r\n        src={salty}\r\n        alt={\"\"}\r\n        className=\"From-img\"\r\n      />\r\n      <div style={{ padding: \"0 3%\", marginBottom: \"40px\" }}>\r\n        <h1 className=\"devsoc21\">\r\n          <Link to=\"/app/dashboard\" style={{ textDecoration: \"none\", width: \"fit-content\" }}>\r\n          <img src={logo} width={150}></img>\r\n          </Link>\r\n        </h1>\r\n        <h1 className=\"page-title\">Team Details</h1>\r\n      </div>\r\n      <div className=\"team-details-div\">\r\n        {/* <Container> */}\r\n        <div style={{ padding: \"0 5%\", height: \"100%\" }}>\r\n          <Grid container sapcing={3} style={{ height: \"100%\" }}>\r\n            <Grid item xs={12} sm={6} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <h1 style={{ textAlign: \"center\" }}>Idea not made public yet!</h1>\r\n            </Grid>\r\n            {/* <Hidden xsDown>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n              >\r\n                <img src=\"/assets/teamDetails.png\" alt=\"team details\" style={{ width: \"400px\" }} />\r\n              </Grid>\r\n            </Hidden> */}\r\n          </Grid>\r\n        </div>\r\n        {/* </Container> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Team\\Team.jsx",["127"],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\ProfileSection\\ProfileSection.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Dashboard\\Dashboard.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\FinalSubmission\\FinalSubmission.jsx",["128","129","130","131","132"],"import React from \"react\";\r\nimport salty from \"./FinalIdeaSubmission.png\";\r\nimport TextInput from \"../../Components/TextInput/TextInput\";\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  MenuItem,\r\n  Snackbar,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport \"./FinalSubmission.css\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { ExpandMore, GetApp } from \"@material-ui/icons\";\r\n\r\nfunction FinalSubmission({ data, refresh }) {\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    register,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const history = useHistory();\r\n\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [successSnack, setSuccessSnack] = useState(false);\r\n  const [errorSnack, setErrorSnack] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [zipUpload, setZipUploaded] = useState(false);\r\n\r\n  const handleFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    } else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  const handleZipDownload = () => {\r\n    const a = document.createElement(\"a\");\r\n    a.download = \"devsoc-source.zip\";\r\n    a.href = data.teams.submission.zip;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const onSubmit = async (formData) => {\r\n    setLoading(true);\r\n    let captcha = await executeRecaptcha(\"/\");\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    // if (file === null && !data.teams.submission.zip) {\r\n    //   setErrorText(\"Select ZIP file!\");\r\n    //   setErrorSnack(true);\r\n    //   setLoading(false);\r\n    //   return;\r\n    // }\r\n\r\n    if (file) {\r\n      const zip = new FormData();\r\n      if (file.size > 100000000) {\r\n        setErrorText(\"ZIP file size cannot exceed 100mb!\");\r\n        setErrorSnack(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      zip.append(\"zip\", file);\r\n\r\n      try {\r\n        await axios\r\n          .post(`${process.env.REACT_APP_BACKEND_URL}/team/uploadZip`, zip, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((data) => {});\r\n      } catch (error) {\r\n        setErrorText(\"Could not upload ZIP file. Please try again!\");\r\n        setErrorSnack(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const update = {\r\n      captcha,\r\n      finalDescription: markdown,\r\n      techStack: formData.techStack,\r\n      githubLink: formData.github,\r\n      videolink: formData.demoVideo,\r\n    };\r\n\r\n    try {\r\n      await axios\r\n        .post(`${process.env.REACT_APP_BACKEND_URL}/team/finalSubmission`, update, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((data) => {\r\n          // console.log(data);\r\n          setSuccessSnack(true);\r\n          refresh(true);\r\n          // history.push(\"/app/profile\");\r\n        });\r\n    } catch (error) {\r\n      setErrorText(\"There was some error. Please try again\");\r\n      setErrorSnack(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const initialise = () => {\r\n    // console.log(data);\r\n    if (data.teams && data.teams.submission) {\r\n      setValue(\"name\", data.teams.submission.name);\r\n      setValue(\"description\", data.teams.submission.finalDescription);\r\n      setMarkdown(data.teams.submission.finalDescription);\r\n      setValue(\"github\", data.teams.submission.githubLink);\r\n      setValue(\"demoVideo\", data.teams.submission.videolink);\r\n      setValue(\"techStack\", data.teams.submission.techStack);\r\n\r\n      if (data.teams.submission.zip) {\r\n        setZipUploaded(true);\r\n      } else {\r\n        setZipUploaded(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialise();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (data.message) {\r\n    return (\r\n      <div>\r\n        <>\r\n          <div className=\"dashset\">Idea Submissions have started</div>\r\n          <div className=\"dashset\">\r\n            To submit yours <ExpandMore fontSize={\"large\"} />\r\n          </div>\r\n          <div className=\"team-btn-div\">\r\n            <button className=\"team-primary-btn\" onClick={() => history.push(\"/app/team\")}>\r\n              Form your Team now!\r\n            </button>\r\n          </div>\r\n        </>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <img\r\n    style={{\r\n      height: \"100vh\",\r\n      margin: \"0\",\r\n      width: \"100vw\",\r\n      padding: \"0\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\",\r\n     \r\n     \r\n      position: \"fixed\",\r\n      bottom: \"0\",\r\n      right: \"0\",\r\n      zIndex: -1,\r\n    }}\r\n    src={salty}\r\n    alt={\"\"}\r\n    className=\"From-img\"\r\n  />\r\n    <div className=\"team-joined-div\" style={{ padding: \"0\" }}>\r\n      \r\n      <Grid container style={{ height: \"100%\" }}>\r\n        <Grid item xs={12} sm={12} md={7}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} className=\"sub-side final-left-box\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextInput\r\n                      select\r\n                      label=\"Track\"\r\n                      variant=\"outlined\"\r\n                      defaultValue={\r\n                        data.teams && data.teams.submission\r\n                          ? data.teams.submission.track === \"Open Innovation\"\r\n                            ? \"openInnovation\"\r\n                            : data.teams.submission.track\r\n                          : null\r\n                      }\r\n                      inputProps={{ ...register(\"track\", { required: true }) }}\r\n                      disabled\r\n                    >\r\n                      <MenuItem key={0} value=\"ar-vr\">\r\n                        Best of AR/VR\r\n                      </MenuItem>\r\n                      <MenuItem key={1} value=\"fun\">\r\n                        Most Fun!\r\n                      </MenuItem>\r\n                      <MenuItem key={2} value=\"health\">\r\n                        Health and Wellness + Medical\r\n                      </MenuItem>\r\n                      <MenuItem key={3} value=\"devtools\">\r\n                        DevTools\r\n                      </MenuItem>\r\n                      <MenuItem key={4} value=\"openInnovation\">\r\n                        Open Innovation\r\n                      </MenuItem>\r\n                      <MenuItem key={5} value=\"socialGood\">\r\n                        Best Social Good Hack\r\n                      </MenuItem>\r\n                      <MenuItem key={6} value=\"blockchain\">\r\n                        Blockchain\r\n                      </MenuItem>\r\n                    </TextInput>\r\n                    {errors.track && (\r\n                      <span className=\"team-error\">Please Select a your preferred track!</span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} style={{ paddingTop: 12 }}>\r\n                    <TextInput\r\n                      label=\"Project Name\"\r\n                      variant=\"outlined\"\r\n                      inputProps={{\r\n                        ...register(\"name\", {\r\n                          required: { value: true, message: \"This field is required\" },\r\n                          maxLength: { value: 100, message: \"Max 100 characters only\" },\r\n                        }),\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name && <span className=\"team-error\">{errors.name.message}</span>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Tooltip title=\"Link to the Github Repo. If multiple repos are used, enter any one URL and mention the others in the README\">\r\n                      <TextInput\r\n                        label=\"Github Repo link\"\r\n                        variant=\"outlined\"\r\n                        type=\"url\"\r\n                        inputProps={{\r\n                          ...register(\"github\", {\r\n                            required: { value: true, message: \"This field is required\" },\r\n                            maxLength: { value: 200, message: \"Max 200 characters only\" },\r\n                          }),\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                    {errors.github && <span className=\"team-error\">{errors.github.message}</span>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Tooltip title=\"Link to the demo video. Make sure the video is not private. Optional for Review 2, but required for final pitch\">\r\n                      <TextInput\r\n                        label=\"Demo Video link (optional)\"\r\n                        variant=\"outlined\"\r\n                        type=\"url\"\r\n                        inputProps={{\r\n                          ...register(\"demoVideo\", {\r\n                            maxLength: { value: 200, message: \"Max 200 characters only\" },\r\n                          }),\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                    {errors.demoVideo && (\r\n                      <span className=\"team-error\">{errors.demoVideo.message}</span>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Tooltip title=\"Enter your tech stack, separated by comma.\">\r\n                      <TextInput\r\n                        label=\"Tech Stack\"\r\n                        variant=\"outlined\"\r\n                        inputProps={{\r\n                          ...register(\"techStack\", {\r\n                            required: { value: true, message: \"This field is required\" },\r\n                            maxLength: { value: 500, message: \"Max 500 characters only\" },\r\n                          }),\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                    {errors.techStack && (\r\n                      <span className=\"team-error\">{errors.techStack.message}</span>\r\n                    )}\r\n                  </Grid>\r\n                  {/* <Grid item xs={12}>\r\n                    <h3 className=\"file-gradient-head\">\r\n                      Source Code upload{\" \"}\r\n                      {!zipUpload ? (\r\n                        \" (Not uploaded)\"\r\n                      ) : (\r\n                        <IconButton\r\n                          style={{ padding: 0, marginLeft: \"10px\" }}\r\n                          onClick={handleZipDownload}\r\n                        >\r\n                          <GetApp />\r\n                        </IconButton>\r\n                      )}\r\n                    </h3>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".zip,.rar\"\r\n                      style={{ marginBottom: \"1em\" }}\r\n                      onChange={handleFile}\r\n                    />\r\n                  </Grid> */}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} className=\"sub-side\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextInput\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      label=\"Description\"\r\n                      onChange={(event) => {\r\n                        setMarkdown(event.target.value);\r\n                      }}\r\n                      helperText={\r\n                        <a\r\n                          href=\"https://github.github.com/gfm/\"\r\n                          style={{ textDecoration: \"none\", color: \"#FFF\", fontWeight: 600 }}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          Markdown Supported\r\n                        </a>\r\n                      }\r\n                      inputProps={{\r\n                        ...register(\"description\", {\r\n                          required: { value: true, message: \"Please fill this field!\" },\r\n                        }),\r\n                      }}\r\n                      rows={15}\r\n                    />\r\n                    {errors.description && (\r\n                      <span className=\"team-error\">{errors.description.message}</span>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <button\r\n                      className=\"team-primary-btn submit-btn\"\r\n                      type=\"submit\"\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? (\r\n                        <CircularProgress color=\"secondary\" size={24} />\r\n                      ) : (\r\n                        \"Submit Project\"\r\n                      )}\r\n                    </button>\r\n                    {/* Project submissions closed! Stay tuned! */}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={5}\r\n          style={{\r\n            backgroundColor: \"#1c006f88\",\r\n            padding: 25,\r\n            borderRadius: 25,\r\n            maxHeight: \"75vh\",\r\n          }}\r\n        >\r\n          <label className=\"MuiFormLabel-root\">Idea Preview </label>\r\n          {markdown === \"\" ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: 600,\r\n              }}\r\n            >\r\n              No Content Yet\r\n            </div>\r\n          ) : (\r\n            <div style={{ overflow: \"auto\", maxHeight: \"calc(100% - 10px)\" }}>\r\n              <ReactMarkdown plugins={[gfm]} children={markdown} />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Hidden xsDown>\r\n        <Grid item md={6}>\r\n          <img\r\n            style={{\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"100%\",\r\n              height: \"auto\",\r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n              zIndex: -1,\r\n            }}\r\n            src={salty}\r\n            alt={\"\"}\r\n            className=\"From-img\"\r\n          />\r\n        </Grid>\r\n      </Hidden>\r\n      <Snackbar\r\n        open={successSnack}\r\n        onClose={() => setSuccessSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"success\" onClose={() => setSuccessSnack(false)}>\r\n          Project Submitted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={errorSnack}\r\n        onClose={() => setErrorSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"error\" onClose={() => setErrorSnack(false)}>\r\n          {errorText}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FinalSubmission;\r\n","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\SubmitSection\\SubmitSection.jsx",["133"],"import { Route, Switch } from \"react-router\";\r\nimport ProjectSubmission from \"../ProjectSubmission/ProjectSubmission\";\r\nimport IdeaSubmission from \"../IdeaSubmission/IdeaSubmission\";\r\n\r\nfunction SubmitSection({ data, refresh }) {\r\n  return (\r\n    <div className=\"team-container sub-container\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/app/submission\"\r\n          component={(props) => <IdeaSubmission {...props} data={data} refresh={refresh} />}\r\n        ></Route>\r\n        {/* <Route\r\n          exact\r\n          path=\"/app/submission/project\"\r\n          component={(props) => <ProjectSubmission {...props} data={data} refresh={refresh} />}\r\n        ></Route> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubmitSection;\r\n","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\BottomNav\\BottomNav.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\TopNav\\TopNav.jsx",["134"],"import { Avatar, Dialog, DialogContent, Hidden, SvgIcon } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./TopNav.css\";\r\nimport logo from './DEVSOCLogo.png';\r\n\r\nfunction TopNav({ data }) {\r\n  const history = useHistory();\r\n  const path = history.location.pathname;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div style={{ padding: \"0 3%\" }}>\r\n      <h1 className=\"devsoc21\">\r\n        <Link to=\"/app/dashboard\" style={{ textDecoration: \"none\", width: \"fit-content\" }}>\r\n          <img src={logo} width={150}></img>\r\n          {/* DEVSOC'21 */}\r\n        </Link>\r\n      </h1>\r\n      <h1 className=\"page-title\">\r\n        {path === \"/app/team\"\r\n          ? \"My Team\"\r\n          : path === \"/app/dashboard\"\r\n          ? \"Dashboard\"\r\n          : path === \"/app/submission\"\r\n          ? \"Idea Submission\"\r\n          : path === \"/app/profile\" || path === \"/app/profile/edit\"\r\n          ? \"Profile\"\r\n          : \"\"}\r\n      </h1>\r\n      {history.location.pathname === \"/app/profile\" ? (\r\n        <Hidden xsDown>\r\n          <button\r\n            className=\"user-btn\"\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n          >\r\n            <Avatar alt={data.name} variant=\"circular\" src={data.avatar} />\r\n          </button>\r\n        </Hidden>\r\n      ) : (\r\n        <button\r\n          className=\"user-btn\"\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          <Avatar alt={data.name} variant=\"circular\" src={data.avatar} />\r\n        </button>\r\n      )}\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        className=\"create-team-modal\"\r\n        fullWidth\r\n        PaperProps={{ className: \"dialog-paper\" }}\r\n      >\r\n        <DialogContent\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <h3>Hello, {data.name}</h3>\r\n          <Link\r\n            to=\"/app/profile\"\r\n            style={{ textDecoration: \"none\", width: \"100%\" }}\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            <button className=\"team-primary-btn modal-input\">\r\n              <SvgIcon viewBox=\"0 0 44 44\" fill=\"none\">\r\n                <path\r\n                  d=\"M36.6666 38.5V34.8333C36.6666 32.8884 35.894 31.0232 34.5187 29.6479C33.1434 28.2726 31.2782 27.5 29.3333 27.5H14.6666C12.7217 27.5 10.8564 28.2726 9.48114 29.6479C8.10587 31.0232 7.33325 32.8884 7.33325 34.8333V38.5\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"4\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  fill=\"none\"\r\n                />\r\n                <path\r\n                  d=\"M22.0001 20.1667C26.0502 20.1667 29.3334 16.8834 29.3334 12.8333C29.3334 8.78325 26.0502 5.5 22.0001 5.5C17.95 5.5 14.6667 8.78325 14.6667 12.8333C14.6667 16.8834 17.95 20.1667 22.0001 20.1667Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"4\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </SvgIcon>\r\n              Profile\r\n            </button>\r\n          </Link>\r\n          <button\r\n            className=\"team-primary-btn modal-input\"\r\n            onClick={() => {\r\n              localStorage.removeItem(\"authToken\");\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            <SvgIcon viewBox=\"0 0 49 44\">\r\n              <path\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                d=\"M25.125 29.75V32.0625C25.125 33.9024 24.3941 35.667 23.0931 36.9681C21.792 38.2691 20.0274 39 18.1875 39H8.9375C7.09756 39 5.33298 38.2691 4.03195 36.9681C2.73091 35.667 2 33.9024 2 32.0625V8.9375C2 7.09756 2.73091 5.33298 4.03195 4.03195C5.33298 2.73091 7.09756 2 8.9375 2H18.1875C20.0274 2 21.792 2.73091 23.0931 4.03195C24.3941 5.33298 25.125 7.09756 25.125 8.9375V11.25M34.375 29.75L43.625 20.5L34.375 29.75ZM43.625 20.5L34.375 11.25L43.625 20.5ZM43.625 20.5H11.25H43.625Z\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"3\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </SvgIcon>\r\n            Logout\r\n          </button>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopNav;\r\n","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\TeamCard\\TeamCard.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\ProjectSubmission\\ProjectSubmission.jsx",["135"],"import React from \"react\";\r\nimport salty from \"../IdeaSubmission/Saly-16.svg\";\r\nimport TextInput from \"../../Components/TextInput/TextInput\";\r\nimport { CircularProgress, Grid, Hidden, MenuItem, Snackbar } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\n// import \"./Idea.css\";\r\n\r\nfunction IdeaSubmission({ data, refresh }) {\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    register,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const history = useHistory();\r\n\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [successSnack, setSuccessSnack] = useState(false);\r\n  const [errorSnack, setErrorSnack] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoading(true);\r\n    let captcha = await executeRecaptcha(\"/\");\r\n    var update = { ...data, captcha };\r\n    // console.log(update);\r\n    const token = localStorage.getItem(\"authToken\");\r\n    try {\r\n      await axios\r\n        .post(`${process.env.REACT_APP_BACKEND_URL}/team/saveidea`, update, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((data) => {\r\n          // console.log(data);\r\n          setSuccessSnack(true);\r\n          refresh(true);\r\n          // history.push(\"/app/profile\");\r\n        });\r\n    } catch (error) {\r\n      if (error.response.status == 409) {\r\n        setErrorText(\"Time Size should be 2 to 5 members!\");\r\n        setErrorSnack(true);\r\n      } else {\r\n        setErrorText(\"Something went wrong, please try again!\");\r\n        setErrorSnack(true);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const initialise = () => {\r\n    // console.log(data);\r\n    if (data.teams && data.teams.submission) {\r\n      setValue(\"name\", data.teams.submission.name);\r\n      setValue(\"description\", data.teams.submission.description);\r\n      setMarkdown(data.teams.submission.description);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialise();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (data.message) {\r\n    return (\r\n      <div>\r\n        <>\r\n          <div className=\"dashset\">Idea Submissions have started</div>\r\n          <div className=\"dashset\">\r\n            To submit yours <ExpandMore fontSize={\"large\"} />\r\n          </div>\r\n          <div className=\"team-btn-div\">\r\n            <button className=\"team-primary-btn\" onClick={() => history.push(\"/app/team\")}>\r\n              Form your Team now!\r\n            </button>\r\n          </div>\r\n        </>\r\n\r\n        <img\r\n          style={{\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"100%\",\r\n            height: \"auto\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            right: \"0\",\r\n            zIndex: -1,\r\n          }}\r\n          src={salty}\r\n          alt={\"\"}\r\n          className=\"From-img\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"team-joined-div\">\r\n      <Grid container>\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid item container xs={12} spacing={2} className=\"sub-side\">\r\n              <Grid item xs={12}>\r\n                <TextInput\r\n                  select\r\n                  label=\"Track\"\r\n                  variant=\"outlined\"\r\n                  defaultValue={\r\n                    data.teams && data.teams.submission ? data.teams.submission.track : \"\"\r\n                  }\r\n                  inputProps={{ ...register(\"track\", { required: true }) }}\r\n                >\r\n                  <MenuItem key={0} value=\"ar-vr\">\r\n                    Best of AR/VR\r\n                  </MenuItem>\r\n                  <MenuItem key={1} value=\"fun\">\r\n                    Most Fun!\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value=\"health\">\r\n                    Health and Wellness + Medical\r\n                  </MenuItem>\r\n                  <MenuItem key={3} value=\"devtools\">\r\n                    DevTools\r\n                  </MenuItem>\r\n                  <MenuItem key={4} value=\"openInnovation\">\r\n                    Open Innovation\r\n                  </MenuItem>\r\n                  <MenuItem key={5} value=\"socialGood\">\r\n                    Best Social Good Hack\r\n                  </MenuItem>\r\n                  <MenuItem key={6} value=\"blockchain\">\r\n                    Blockchain\r\n                  </MenuItem>\r\n                </TextInput>\r\n                {errors.track && (\r\n                  <span className=\"team-error\">Please Select a your preferred track!</span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} style={{ paddingTop: 12 }}>\r\n                <TextInput\r\n                  label=\"Project Name\"\r\n                  variant=\"outlined\"\r\n                  inputProps={{\r\n                    ...register(\"name\", {\r\n                      required: { value: true, message: \"This field is required\" },\r\n                      maxLength: { value: 100, message: \"Max 100 characters only\" },\r\n                    }),\r\n                  }}\r\n                />\r\n                {errors.name && <span className=\"team-error\">{errors.name.message}</span>}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextInput\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  label=\"Description\"\r\n                  onChange={(event) => {\r\n                    setMarkdown(event.target.value);\r\n                  }}\r\n                  helperText={\r\n                    <a\r\n                      href=\"https://github.github.com/gfm/\"\r\n                      style={{ textDecoration: \"none\", color: \"#FFF\", fontWeight: 600 }}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      Markdown Supported\r\n                    </a>\r\n                  }\r\n                  inputProps={{\r\n                    ...register(\"description\", {\r\n                      required: { value: true, message: \"Please fill this field!\" },\r\n                    }),\r\n                  }}\r\n                  rows={10}\r\n                />\r\n                {errors.description && (\r\n                  <span className=\"team-error\">{errors.description.message}</span>\r\n                )}\r\n              </Grid>\r\n              <button className=\"team-primary-btn submit-btn\" type=\"submit\" disabled={loading}>\r\n                {loading ? <CircularProgress color=\"secondary\" size={24} /> : \"Submit Idea\"}\r\n              </button>\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  Once the idea is submitted, you will not be able to join/ leave this team or\r\n                  invite/remove someone from your team.\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={8}\r\n          lg={9}\r\n          style={{\r\n            backgroundColor: \"#1c006f88\",\r\n            padding: 25,\r\n            borderRadius: 25,\r\n            maxHeight: \"75vh\",\r\n          }}\r\n        >\r\n          <label className=\"MuiFormLabel-root\">Idea Preview </label>\r\n          {markdown === \"\" ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: \"2rem\",\r\n                fontWeight: 600,\r\n              }}\r\n            >\r\n              No Content Yet\r\n            </div>\r\n          ) : (\r\n            <div style={{ overflow: \"auto\", maxHeight: \"calc(100% - 10px)\" }}>\r\n              <ReactMarkdown plugins={[gfm]} children={markdown} />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Hidden xsDown>\r\n        <Grid item md={6}>\r\n          <img\r\n            style={{\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"100%\",\r\n              height: \"auto\",\r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n              zIndex: -1,\r\n            }}\r\n            src={salty}\r\n            alt={\"\"}\r\n            className=\"From-img\"\r\n          />\r\n        </Grid>\r\n      </Hidden>\r\n      <Snackbar\r\n        open={successSnack}\r\n        onClose={() => setSuccessSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"success\" onClose={() => setSuccessSnack(false)}>\r\n          Idea Submitted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={errorSnack}\r\n        onClose={() => setErrorSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"error\" onClose={() => setErrorSnack(false)}>\r\n          {errorText}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IdeaSubmission;\r\n","C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\IdeaSubmission\\IdeaSubmission.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\TextInput\\TextInput.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\Profile\\Profile.jsx",["136","137","138"],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Pages\\ProfileEdit\\ProfileEdit.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\JoinTeamModal\\JoinTeamModal.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\RemoveMemberModal\\RemoveMember.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\InviteModal\\InviteModal.jsx",[],"C:\\Users\\Sahas Vivek\\Desktop\\DEVSOC'22 Main\\DEVSOC-Main-Portal\\src\\Components\\CreateTeamModal\\CreateTeamModal.jsx",[],{"ruleId":"139","replacedBy":"140"},{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","severity":1,"message":"144","line":52,"column":9,"nodeType":"145","endLine":52,"endColumn":42},{"ruleId":"143","severity":1,"message":"144","line":58,"column":11,"nodeType":"145","endLine":58,"endColumn":45},{"ruleId":"146","severity":1,"message":"147","line":16,"column":10,"nodeType":"148","messageId":"149","endLine":16,"endColumn":15},{"ruleId":"150","severity":1,"message":"151","line":42,"column":6,"nodeType":"152","endLine":42,"endColumn":14,"suggestions":"153"},{"ruleId":"143","severity":1,"message":"144","line":76,"column":11,"nodeType":"145","endLine":76,"endColumn":39},{"ruleId":"146","severity":1,"message":"154","line":1,"column":10,"nodeType":"148","messageId":"149","endLine":1,"endColumn":19},{"ruleId":"146","severity":1,"message":"155","line":1,"column":27,"nodeType":"148","messageId":"149","endLine":1,"endColumn":33},{"ruleId":"143","severity":1,"message":"144","line":32,"column":11,"nodeType":"145","endLine":32,"endColumn":39},{"ruleId":"146","severity":1,"message":"155","line":1,"column":34,"nodeType":"148","messageId":"149","endLine":1,"endColumn":40},{"ruleId":"146","severity":1,"message":"156","line":8,"column":3,"nodeType":"148","messageId":"149","endLine":8,"endColumn":13},{"ruleId":"146","severity":1,"message":"157","line":23,"column":22,"nodeType":"148","messageId":"149","endLine":23,"endColumn":28},{"ruleId":"146","severity":1,"message":"158","line":43,"column":10,"nodeType":"148","messageId":"149","endLine":43,"endColumn":19},{"ruleId":"146","severity":1,"message":"159","line":45,"column":9,"nodeType":"148","messageId":"149","endLine":45,"endColumn":19},{"ruleId":"146","severity":1,"message":"160","line":53,"column":9,"nodeType":"148","messageId":"149","endLine":53,"endColumn":26},{"ruleId":"146","severity":1,"message":"161","line":2,"column":8,"nodeType":"148","messageId":"149","endLine":2,"endColumn":25},{"ruleId":"143","severity":1,"message":"144","line":17,"column":11,"nodeType":"145","endLine":17,"endColumn":39},{"ruleId":"162","severity":1,"message":"163","line":53,"column":33,"nodeType":"164","messageId":"165","endLine":53,"endColumn":35},{"ruleId":"146","severity":1,"message":"166","line":13,"column":9,"nodeType":"148","messageId":"149","endLine":13,"endColumn":18},{"ruleId":"146","severity":1,"message":"167","line":30,"column":9,"nodeType":"148","messageId":"149","endLine":30,"endColumn":20},{"ruleId":"150","severity":1,"message":"168","line":46,"column":6,"nodeType":"152","endLine":46,"endColumn":8,"suggestions":"169"},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allTeams'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'Container' is defined but never used.","'Hidden' is defined but never used.","'IconButton' is defined but never used.","'GetApp' is defined but never used.","'zipUpload' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'handleZipDownload' is assigned a value but never used.","'ProjectSubmission' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getString' is assigned a value but never used.","'certificate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.is_profile_completed' and 'history'. Either include them or remove the dependency array.",["173"],"no-global-assign","no-unsafe-negation",{"desc":"174","fix":"175"},{"desc":"176","fix":"177"},"Update the dependencies array to be: [allTeams, search]",{"range":"178","text":"179"},"Update the dependencies array to be: [data.is_profile_completed, history]",{"range":"180","text":"181"},[1286,1294],"[allTeams, search]",[1211,1213],"[data.is_profile_completed, history]"]