[{"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\index.js":"1","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\App.jsx":"2","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\GoogleOAuth\\GoogleOAuth.js":"3","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\App\\AppMain.js":"4","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Landing\\Landing.jsx":"5","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Error404\\Error404.jsx":"6","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\AllTeams\\AllTeams.jsx":"7","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\JoinInvite\\JoinInvite.jsx":"8","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\TeamDetails\\TeamDetails.jsx":"9","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\Loading\\Loading.js":"10","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Team\\Team.jsx":"11","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\ProfileSection\\ProfileSection.jsx":"12","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\FinalSubmission\\FinalSubmission.jsx":"13","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Dashboard\\Dashboard.jsx":"14","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\SubmitSection\\SubmitSection.jsx":"15","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\TopNav\\TopNav.jsx":"16","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\BottomNav\\BottomNav.jsx":"17","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\TeamCard\\TeamCard.jsx":"18","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\IdeaSubmission\\IdeaSubmission.jsx":"19","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\ProjectSubmission\\ProjectSubmission.jsx":"20","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\TextInput\\TextInput.jsx":"21","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\ProfileEdit\\ProfileEdit.jsx":"22","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Profile\\Profile.jsx":"23","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\JoinTeamModal\\JoinTeamModal.jsx":"24","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\RemoveMemberModal\\RemoveMember.jsx":"25","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\InviteModal\\InviteModal.jsx":"26","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\CreateTeamModal\\CreateTeamModal.jsx":"27"},{"size":416,"mtime":1647624741310,"results":"28","hashOfConfig":"29"},{"size":1859,"mtime":1648022580425,"results":"30","hashOfConfig":"29"},{"size":640,"mtime":1647624741200,"results":"31","hashOfConfig":"29"},{"size":5996,"mtime":1647624741185,"results":"32","hashOfConfig":"29"},{"size":2130,"mtime":1648009513638,"results":"33","hashOfConfig":"29"},{"size":674,"mtime":1647864244889,"results":"34","hashOfConfig":"29"},{"size":3054,"mtime":1647928432818,"results":"35","hashOfConfig":"29"},{"size":688,"mtime":1647624741216,"results":"36","hashOfConfig":"29"},{"size":2015,"mtime":1647928517941,"results":"37","hashOfConfig":"29"},{"size":236,"mtime":1647624741172,"results":"38","hashOfConfig":"29"},{"size":8047,"mtime":1647928511139,"results":"39","hashOfConfig":"29"},{"size":690,"mtime":1647925572712,"results":"40","hashOfConfig":"29"},{"size":15589,"mtime":1647928452291,"results":"41","hashOfConfig":"29"},{"size":4760,"mtime":1648009501024,"results":"42","hashOfConfig":"29"},{"size":761,"mtime":1648009480607,"results":"43","hashOfConfig":"29"},{"size":4581,"mtime":1647625042383,"results":"44","hashOfConfig":"29"},{"size":11647,"mtime":1647865200390,"results":"45","hashOfConfig":"29"},{"size":2228,"mtime":1647624741185,"results":"46","hashOfConfig":"29"},{"size":10566,"mtime":1647960410810,"results":"47","hashOfConfig":"29"},{"size":9455,"mtime":1647928501116,"results":"48","hashOfConfig":"29"},{"size":753,"mtime":1647625042383,"results":"49","hashOfConfig":"29"},{"size":23210,"mtime":1648023949713,"results":"50","hashOfConfig":"29"},{"size":4225,"mtime":1648009519297,"results":"51","hashOfConfig":"29"},{"size":3159,"mtime":1648009424148,"results":"52","hashOfConfig":"29"},{"size":3545,"mtime":1647834366855,"results":"53","hashOfConfig":"29"},{"size":4969,"mtime":1647860106582,"results":"54","hashOfConfig":"29"},{"size":2956,"mtime":1647625042375,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"dta8jh",{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"61","usedDeprecatedRules":"58"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"58"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"58"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"58"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"58"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\index.js",[],["122","123"],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\App.jsx",["124"],"import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core\";\r\nimport Landing from \"./Pages/Landing/Landing\";\r\n// import LandingPage from \"./Pages/LandingPage/LandingPage\";\r\nimport GoogleOAuth from \"./Pages/GoogleOAuth/GoogleOAuth\";\r\nimport AppMain from \"./Pages/App/AppMain\";\r\nimport JoinInvite from \"./Pages/JoinInvite/JoinInvite\";\r\nimport AllTeams from \"./Pages/AllTeams/AllTeams\";\r\nimport TeamDetails from \"./Pages/TeamDetails/TeamDetails\";\r\nimport Error404 from \"./Pages/Error404/Error404\";\r\nimport './App.css'\r\nimport discord from \"./Discord-Logo.png\"\r\n// import DiscordLink from \"./Components/DiscordLink/DiscordLink\";\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: \"Montserrat\",\r\n  },\r\n  palette: {\r\n    type: \"dark\",\r\n    primary: {\r\n      main: \"#2CC8EB\",\r\n      color: \"#efefef\",\r\n    },\r\n    secondary: {\r\n      main: \"#ffffff\",\r\n    },\r\n  },\r\n});\r\n\r\nfunction App() {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <a href=\"http://discord.codechefvit.com/\" target=\"_blank\">\r\n        <div class=\"side-fixed-btn hover-change\">\r\n          <img src={discord} className=\"disc-img\" alt=\"\" />\r\n        </div>\r\n      </a>\r\n      <Router>\r\n        {/* <DiscordLink /> */}\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Landing}></Route>\r\n          <Route exact path=\"/auth\" component={GoogleOAuth}></Route>\r\n          <Route path=\"/app\" component={AppMain}></Route>\r\n          <Route exact path=\"/jointeam\" component={JoinInvite}></Route>\r\n          <Route exact path=\"/allTeams\" component={AllTeams}></Route>\r\n          <Route exact path=\"/team/:id\" component={TeamDetails}></Route>\r\n          <Route path=\"*\" component={Error404}></Route>\r\n        </Switch>\r\n      </Router>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\GoogleOAuth\\GoogleOAuth.js",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\App\\AppMain.js",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Landing\\Landing.jsx",["125","126"],"import axios from \"axios\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./Landing.css\";\r\nimport logo from '../../assets/logo.png'\r\nimport text from \"./Landing.png\";\r\nimport salty from \"./landing-bg.png\";\r\n\r\nfunction Landing() {\r\n  const history = useHistory();\r\n  const handleButton = async () => {\r\n    // console.log(\"clicked\");\r\n    const url = `${process.env.REACT_APP_BACKEND_URL}/auth/getUrl`;\r\n    try {\r\n      await axios.get(url).then((res) => {\r\n        // console.log(res);\r\n        window.location.href = res.data.data;\r\n      });\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    let token = localStorage.getItem(\"authToken\");\r\n    if (token && token !== \"\") {\r\n      history.replace(\"/app/dashboard\");\r\n    }\r\n    //eslint-disable-next-line\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"landing-page\">\r\n       <img\r\n        style={{\r\n          height: \"100%\",\r\n          margin: \"0\",\r\n          width: \"100%\",\r\n          padding: \"0\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          right: \"0\",\r\n          zIndex: -1,\r\n          filter: \"brightness(0.7)\",\r\n        }}\r\n        src={salty}\r\n        alt={\"\"}\r\n        className=\"From-img\"\r\n      />\r\n      <div className=\"dev-container\">\r\n        <img className=\"logo\" src={logo}></img>\r\n        <div>\r\n          <div className=\"devsoc\">\r\n          <h1 className=\"heading1\">\r\n            DEVSOC <span style={{ color: \"#37ABBC\" }}>‘22</span>\r\n          </h1>\r\n          <img src={text} className=\"logo2\"></img>\r\n          <div className=\"google-link\">\r\n            <div className=\"google-btn\" onClick={handleButton}>\r\n              <div className=\"google-icon-wrapper\">\r\n                <img className=\"google-icon\" src=\"/assets/gbtn.png\" alt=\"google\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      {/* <h1 className=\"devsoc21 ds-landing\">DEVSOC'22</h1> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Landing;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Error404\\Error404.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\AllTeams\\AllTeams.jsx",["127","128","129"],"import { Container, TextField } from \"@material-ui/core\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Loading from \"../../Components/Loading/Loading\";\r\nimport TeamCard from \"../../Components/TeamCard/TeamCard\";\r\nimport \"./AllTeams.css\";\r\nimport team from \"../../assets/Allteams.png\";\r\nimport logo from './DEVSOCLogo.png';\r\n\r\nconst AllTeams = () => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [allTeams, setAllTeams] = useState([]);\r\n  const [teams, setTeams] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  const getTeams = async () => {\r\n    const url = `${process.env.REACT_APP_BACKEND_URL}/team/all`;\r\n\r\n    try {\r\n      await axios.get(url).then((res) => {\r\n        setAllTeams(res.data.teams);\r\n        setTeams(res.data.teams);\r\n      });\r\n    } catch (err) {\r\n      // console.log(err);\r\n      setError(true);\r\n    }\r\n\r\n    setLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const toSearch = search.toLowerCase();\r\n    const filtered = allTeams.filter((item) => {\r\n      return item.name.toLowerCase().includes(toSearch);\r\n    });\r\n\r\n    setTeams(filtered);\r\n  }, [search]);\r\n\r\n  useEffect(() => {\r\n    getTeams();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <Loading />;\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"all-teams-page\">\r\n      <img\r\n        style={{\r\n          height: \"100vh\",\r\n          margin: \"0\",\r\n          width: \"100vw\",\r\n          padding: \"0\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          right: \"0\",\r\n          zIndex: -1,\r\n          filter: \"brightness(0.7)\",\r\n        }}\r\n        src={team}\r\n        alt={\"\"}\r\n        className=\"From-img\"\r\n      />\r\n      <div style={{ padding: \"0 3%\", marginBottom: \"40px\" }}>\r\n        <h1 className=\"devsoc21\">\r\n          <Link to=\"/app/dashboard\" style={{ textDecoration: \"none\", width: \"fit-content\" }}>\r\n          <img src={logo} width={150}></img>\r\n          </Link>\r\n        </h1>\r\n        <h1 className=\"page-title\">All Teams</h1>\r\n      </div>\r\n      <Container className=\"all-teams-div\">\r\n        <div className=\"search-container\">\r\n          <TextField\r\n            className=\"search-box\"\r\n            // placeholder=\"Search by name/members...\"\r\n            variant=\"outlined\"\r\n            label=\"Search teams\"\r\n            // InputLabelProps={{ shrink: true }}\r\n            InputProps={{ endAdornment: <Search /> }}\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n        <div className=\"all-teams-list\">\r\n\r\n          {teams.length > 0 ? (\r\n            teams.map((team) => <TeamCard team={team} />)\r\n          ) : (\r\n            <h1 style={{ textAlign: \"center\" }}>No teams available :(</h1>\r\n          )}\r\n        </div>\r\n      </Container>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AllTeams;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\JoinInvite\\JoinInvite.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\TeamDetails\\TeamDetails.jsx",["130","131","132"],"import { Container, Grid, Hidden } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./TeamDetails.css\";\r\nimport salty from \"./TeamDetails.png\";\r\nimport logo from './DEVSOCLogo.png';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst TeamDetails = () => {\r\n  return (\r\n    \r\n    <div className=\"team-details\">\r\n       <img\r\n        style={{\r\n          height: \"100vh\",\r\n          margin: \"0\",\r\n          width: \"100vw\",\r\n          padding: \"0\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          right: \"0\",\r\n          zIndex: -1,\r\n          filter: \"brightness(0.7)\",\r\n        }}\r\n        src={salty}\r\n        alt={\"\"}\r\n        className=\"From-img\"\r\n      />\r\n      <div style={{ padding: \"0 3%\", marginBottom: \"40px\" }}>\r\n        <h1 className=\"devsoc21\">\r\n          <Link to=\"/app/dashboard\" style={{ textDecoration: \"none\", width: \"fit-content\" }}>\r\n          <img src={logo} width={150}></img>\r\n          </Link>\r\n        </h1>\r\n        <h1 className=\"page-title\">Team Details</h1>\r\n      </div>\r\n      <div className=\"team-details-div\">\r\n        {/* <Container> */}\r\n        <div style={{ padding: \"0 5%\", height: \"100%\" }}>\r\n          <Grid container sapcing={3} style={{ height: \"100%\" }}>\r\n            <Grid item xs={12} sm={6} style={{ display: \"flex\", alignItems: \"center\" }}>\r\n              <h1 style={{ textAlign: \"center\" }}>Idea not made public yet!</h1>\r\n            </Grid>\r\n            {/* <Hidden xsDown>\r\n              <Grid\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}\r\n              >\r\n                <img src=\"/assets/teamDetails.png\" alt=\"team details\" style={{ width: \"400px\" }} />\r\n              </Grid>\r\n            </Hidden> */}\r\n          </Grid>\r\n        </div>\r\n        {/* </Container> */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamDetails;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\Loading\\Loading.js",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Team\\Team.jsx",["133"],"import { CircularProgress, Grid, Hidden } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\nimport CreateTeamModal from \"../../Components/CreateTeamModal/CreateTeamModal\";\r\nimport InviteModal from \"../../Components/InviteModal/InviteModal\";\r\nimport JoinTeamModal from \"../../Components/JoinTeamModal/JoinTeamModal\";\r\nimport RemoveMember from \"../../Components/RemoveMemberModal/RemoveMember\";\r\nimport \"./Team.css\";\r\nimport dash from './Dashboard.png'\r\nimport back from \"./EmptyTeam.png\";\r\n\r\nfunction Team({ data, refresh, profile }) {\r\n  const [createTeam, setCreateTeam] = useState(false);\r\n  const [alreadyJoined, setAlreadyJoined] = useState(false);\r\n  const [ideaSubmitted, setIdeaSubmitted] = useState(false);\r\n  const [joinTeam, setJoinTeam] = useState(false);\r\n  const [btnLoading, setBtnLoading] = useState(false);\r\n  const [removing, setRemoving] = useState(false);\r\n  const [inviting, setInviting] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (data.message && data.message === \"Not in a team\") {\r\n      setAlreadyJoined(false);\r\n    } else {\r\n      setAlreadyJoined(true);\r\n      // console.log(data.teams.submission.name)\r\n      if (data.teams.submission) {\r\n        if (data.teams.submission.name) setIdeaSubmitted(true);\r\n      }\r\n    }\r\n  }, [data]);\r\n\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n  const handleLeave = async () => {\r\n    setBtnLoading(true);\r\n\r\n    const url = `${process.env.REACT_APP_BACKEND_URL}/team/leave`;\r\n    const token = localStorage.getItem(\"authToken\");\r\n    let captcha = await executeRecaptcha(\"/\");\r\n\r\n    try {\r\n      await axios\r\n        .post(\r\n          url,\r\n          { captcha },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        )\r\n        .then((res) => {\r\n          // console.log(res);\r\n          refresh();\r\n        });\r\n    } catch (error) {\r\n      // console.log(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"team-container\">\r\n\r\n      <img\r\n        style={{\r\n          height: \"100vh\",\r\n          margin: \"0\",\r\n          width: \"100vw\",\r\n          padding: \"0\",\r\n          backgroundRepeat: \"no-repeat\",\r\n          backgroundSize: \"cover\",\r\n\r\n          filter: \"brightness(0.7)\",\r\n          position: \"fixed\",\r\n          bottom: \"0\",\r\n          right: \"0\",\r\n          zIndex: -1,\r\n        }}\r\n        src={dash}\r\n        alt={\"\"}\r\n        className=\"From-img\"\r\n      />\r\n      {!alreadyJoined ? (\r\n        <div className=\"team-div\">\r\n          <>\r\n            <h1 style={{ fontSize: \"2.75rem\" }}>Dashboard</h1>\r\n            <h3 style={{ marginBottom: \"40px\" }}>Oops, looks like you dont have a team yet!</h3>\r\n            <div className=\"team-btn-div\">\r\n              <button className=\"team-primary-btn\" onClick={() => setCreateTeam(true)}>\r\n                Create a team\r\n              </button>\r\n              <p style={{ fontWeight: 400, fontSize: 24, margin: \"10px\" }}>or</p>\r\n              <button className=\"join-team-btn\" onClick={() => setJoinTeam(true)}>\r\n                Join a team\r\n              </button>\r\n            </div>\r\n            <CreateTeamModal\r\n              open={createTeam}\r\n              handleClose={() => setCreateTeam(false)}\r\n              refresh={refresh}\r\n            />\r\n            <JoinTeamModal\r\n              open={joinTeam}\r\n              handleClose={() => setJoinTeam(false)}\r\n              refresh={refresh}\r\n            />\r\n          </>\r\n        </div>\r\n      ) : (\r\n        <div className=\"team-joined-div\">\r\n          <img\r\n            style={{\r\n              height: \"100vh\",\r\n              margin: \"0\",\r\n              width: \"100vw\",\r\n              padding: \"0\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"cover\",\r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n              zIndex: -1,\r\n              filter: \"brightness(0.7)\",\r\n            }}\r\n            src={back}\r\n            alt={\"\"}\r\n            className=\"From-img\"\r\n          />\r\n          <Grid container spacing={3} xs={12} style={{display: \"contents\"}}>\r\n            {/* <Grid item > */}\r\n              <div\r\n                style={{\r\n                  width: \"100%\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                  margin: \"20px 0\",\r\n\r\n                }}\r\n              >\r\n                <h2 className=\"team-name\">Team {data.teams.name}</h2>\r\n\r\n              </div>\r\n              <a\r\n                className=\"remove-btn\"\r\n                href=\"/allTeams\"\r\n                target=\"_blank\"\r\n                rel=\"noreferrer\"\r\n                style={{ textDecoration: \"none\" }}\r\n              >\r\n                View all teams\r\n              </a>\r\n              <div className=\"my-team-info\">\r\n                {/* <h2 className=\"gradient-head\">Status</h2>\r\n                <p className=\"team-status\">Selected for final pitch</p> */}\r\n                <div\r\n                  className=\"team-members-head-div\"\r\n                  style={{\r\n                    width: \"100%\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"space-between\",\r\n                    alignItems: \"center\",\r\n                    marginBottom: \"20px\",\r\n                  }}\r\n                >\r\n                </div>\r\n                <h2 className=\"gradient-head\">Team Members</h2>\r\n                {data.isLeader && !ideaSubmitted ? (\r\n                  <span className=\"remove-btn\" onClick={() => setRemoving(true)}>\r\n                    Remove members\r\n                  </span>\r\n                ) : null}\r\n                <Grid container spacing={3} className=\"team-members-div\" style={{\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                }}>\r\n                  {data.teams.users.map((user, i) => (\r\n                    <Grid\r\n                      item\r\n                      xs={12}\r\n                      // sm={12}\r\n                      key={user.email}\r\n                      style={{\r\n                        paddingBottom: 0,\r\n                        paddingTop: 0,\r\n                        display: \"flex\",\r\n                        marginTop: \"20px\",\r\n                        justifyContent: \"center\",\r\n\r\n                      }}\r\n                      className=\"team-container\"\r\n                    >\r\n                      <p className=\"team-status team-member\">{user.name}</p>\r\n                    </Grid>\r\n                  ))}\r\n                </Grid>\r\n                <h2 className=\"gradient-head\" style={{ marginTop: \"40px\" }}>\r\n                  Idea Status\r\n                </h2>\r\n                <p className=\"team-status\">{data.teams.submission.status}</p>\r\n              </div>\r\n              <div className=\"team-action-div\">\r\n                {data.isLeader && !ideaSubmitted ? (\r\n                  <button className=\"team-primary-btn\" onClick={() => setInviting(true)}>\r\n                    Invite members\r\n                  </button>\r\n                ) : null}\r\n                {!ideaSubmitted ? (\r\n                  <button className=\"team-secondary-btn\" onClick={handleLeave}>\r\n                    {btnLoading ? <CircularProgress color=\"secondary\" size={24} /> : \"Leave team\"}\r\n                  </button>\r\n                ) : (\r\n                  <></>\r\n                )}\r\n              </div>\r\n            {/* </Grid> */}\r\n\r\n          </Grid>\r\n          <RemoveMember\r\n            open={removing}\r\n            handleClose={() => setRemoving(false)}\r\n            data={data}\r\n            refresh={refresh}\r\n            profile={profile}\r\n          />\r\n          <InviteModal\r\n            open={inviting}\r\n            handleClose={() => setInviting(false)}\r\n            data={data}\r\n            refresh={refresh}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Team;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\ProfileSection\\ProfileSection.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\FinalSubmission\\FinalSubmission.jsx",["134","135","136","137","138"],"import React from \"react\";\r\nimport salty from \"./FinalIdeaSubmission.png\";\r\nimport TextInput from \"../../Components/TextInput/TextInput\";\r\nimport {\r\n  CircularProgress,\r\n  Grid,\r\n  Hidden,\r\n  IconButton,\r\n  MenuItem,\r\n  Snackbar,\r\n  Tooltip,\r\n} from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport \"./FinalSubmission.css\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { ExpandMore, GetApp } from \"@material-ui/icons\";\r\n\r\nfunction FinalSubmission({ data, refresh }) {\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    register,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const history = useHistory();\r\n\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [successSnack, setSuccessSnack] = useState(false);\r\n  const [errorSnack, setErrorSnack] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n  const [file, setFile] = useState(null);\r\n  const [zipUpload, setZipUploaded] = useState(false);\r\n\r\n  const handleFile = (e) => {\r\n    if (e.target.files[0]) {\r\n      setFile(e.target.files[0]);\r\n    } else {\r\n      setFile(null);\r\n    }\r\n  };\r\n\r\n  const handleZipDownload = () => {\r\n    const a = document.createElement(\"a\");\r\n    a.download = \"devsoc-source.zip\";\r\n    a.href = data.teams.submission.zip;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n  };\r\n\r\n  const onSubmit = async (formData) => {\r\n    setLoading(true);\r\n    let captcha = await executeRecaptcha(\"/\");\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    // if (file === null && !data.teams.submission.zip) {\r\n    //   setErrorText(\"Select ZIP file!\");\r\n    //   setErrorSnack(true);\r\n    //   setLoading(false);\r\n    //   return;\r\n    // }\r\n\r\n    if (file) {\r\n      const zip = new FormData();\r\n      if (file.size > 100000000) {\r\n        setErrorText(\"ZIP file size cannot exceed 100mb!\");\r\n        setErrorSnack(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n      zip.append(\"zip\", file);\r\n\r\n      try {\r\n        await axios\r\n          .post(`${process.env.REACT_APP_BACKEND_URL}/team/uploadZip`, zip, {\r\n            headers: { Authorization: `Bearer ${token}` },\r\n          })\r\n          .then((data) => {});\r\n      } catch (error) {\r\n        setErrorText(\"Could not upload ZIP file. Please try again!\");\r\n        setErrorSnack(true);\r\n        setLoading(false);\r\n        return;\r\n      }\r\n    }\r\n\r\n    const update = {\r\n      captcha,\r\n      finalDescription: markdown,\r\n      techStack: formData.techStack,\r\n      githubLink: formData.github,\r\n      videolink: formData.demoVideo,\r\n    };\r\n\r\n    try {\r\n      await axios\r\n        .post(`${process.env.REACT_APP_BACKEND_URL}/team/finalSubmission`, update, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((data) => {\r\n          // console.log(data);\r\n          setSuccessSnack(true);\r\n          refresh(true);\r\n          // history.push(\"/app/profile\");\r\n        });\r\n    } catch (error) {\r\n      setErrorText(\"There was some error. Please try again\");\r\n      setErrorSnack(true);\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const initialise = () => {\r\n    // console.log(data);\r\n    if (data.teams && data.teams.submission) {\r\n      setValue(\"name\", data.teams.submission.name);\r\n      setValue(\"description\", data.teams.submission.finalDescription);\r\n      setMarkdown(data.teams.submission.finalDescription);\r\n      setValue(\"github\", data.teams.submission.githubLink);\r\n      setValue(\"demoVideo\", data.teams.submission.videolink);\r\n      setValue(\"techStack\", data.teams.submission.techStack);\r\n\r\n      if (data.teams.submission.zip) {\r\n        setZipUploaded(true);\r\n      } else {\r\n        setZipUploaded(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialise();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (data.message) {\r\n    return (\r\n      <div>\r\n        <>\r\n          <div className=\"dashset\">Idea Submissions have started</div>\r\n          <div className=\"dashset\">\r\n            To submit yours <ExpandMore fontSize={\"large\"} />\r\n          </div>\r\n          <div className=\"team-btn-div\">\r\n            <button className=\"team-primary-btn\" onClick={() => history.push(\"/app/team\")}>\r\n              Form your Team now!\r\n            </button>\r\n          </div>\r\n        </>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <img\r\n    style={{\r\n      height: \"100vh\",\r\n      margin: \"0\",\r\n      width: \"100vw\",\r\n      padding: \"0\",\r\n      backgroundRepeat: \"no-repeat\",\r\n      backgroundSize: \"cover\",\r\n      filter: \"brightness(0.7)\",\r\n     \r\n      position: \"fixed\",\r\n      bottom: \"0\",\r\n      right: \"0\",\r\n      zIndex: -1,\r\n    }}\r\n    src={salty}\r\n    alt={\"\"}\r\n    className=\"From-img\"\r\n  />\r\n    <div className=\"team-joined-div\" style={{ padding: \"0\" }}>\r\n      \r\n      <Grid container style={{ height: \"100%\" }}>\r\n        <Grid item xs={12} sm={12} md={7}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12} sm={6} className=\"sub-side final-left-box\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextInput\r\n                      select\r\n                      label=\"Track\"\r\n                      variant=\"outlined\"\r\n                      defaultValue={\r\n                        data.teams && data.teams.submission\r\n                          ? data.teams.submission.track === \"Open Innovation\"\r\n                            ? \"openInnovation\"\r\n                            : data.teams.submission.track\r\n                          : null\r\n                      }\r\n                      inputProps={{ ...register(\"track\", { required: true }) }}\r\n                      disabled\r\n                    >\r\n                      <MenuItem key={0} value=\"ar-vr\">\r\n                        Best of AR/VR\r\n                      </MenuItem>\r\n                      <MenuItem key={1} value=\"fun\">\r\n                        Most Fun!\r\n                      </MenuItem>\r\n                      <MenuItem key={2} value=\"health\">\r\n                        Health and Wellness + Medical\r\n                      </MenuItem>\r\n                      <MenuItem key={3} value=\"devtools\">\r\n                        DevTools\r\n                      </MenuItem>\r\n                      <MenuItem key={4} value=\"openInnovation\">\r\n                        Open Innovation\r\n                      </MenuItem>\r\n                      <MenuItem key={5} value=\"socialGood\">\r\n                        Best Social Good Hack\r\n                      </MenuItem>\r\n                      <MenuItem key={6} value=\"blockchain\">\r\n                        Blockchain\r\n                      </MenuItem>\r\n                    </TextInput>\r\n                    {errors.track && (\r\n                      <span className=\"team-error\">Please Select a your preferred track!</span>\r\n                    )}\r\n                  </Grid>\r\n\r\n                  <Grid item xs={12} style={{ paddingTop: 12 }}>\r\n                    <TextInput\r\n                      label=\"Project Name\"\r\n                      variant=\"outlined\"\r\n                      inputProps={{\r\n                        ...register(\"name\", {\r\n                          required: { value: true, message: \"This field is required\" },\r\n                          maxLength: { value: 100, message: \"Max 100 characters only\" },\r\n                        }),\r\n                      }}\r\n                      disabled\r\n                    />\r\n                    {errors.name && <span className=\"team-error\">{errors.name.message}</span>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Tooltip title=\"Link to the Github Repo. If multiple repos are used, enter any one URL and mention the others in the README\">\r\n                      <TextInput\r\n                        label=\"Github Repo link\"\r\n                        variant=\"outlined\"\r\n                        type=\"url\"\r\n                        inputProps={{\r\n                          ...register(\"github\", {\r\n                            required: { value: true, message: \"This field is required\" },\r\n                            maxLength: { value: 200, message: \"Max 200 characters only\" },\r\n                          }),\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                    {errors.github && <span className=\"team-error\">{errors.github.message}</span>}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Tooltip title=\"Link to the demo video. Make sure the video is not private. Optional for Review 2, but required for final pitch\">\r\n                      <TextInput\r\n                        label=\"Demo Video link (optional)\"\r\n                        variant=\"outlined\"\r\n                        type=\"url\"\r\n                        inputProps={{\r\n                          ...register(\"demoVideo\", {\r\n                            maxLength: { value: 200, message: \"Max 200 characters only\" },\r\n                          }),\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                    {errors.demoVideo && (\r\n                      <span className=\"team-error\">{errors.demoVideo.message}</span>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <Tooltip title=\"Enter your tech stack, separated by comma.\">\r\n                      <TextInput\r\n                        label=\"Tech Stack\"\r\n                        variant=\"outlined\"\r\n                        inputProps={{\r\n                          ...register(\"techStack\", {\r\n                            required: { value: true, message: \"This field is required\" },\r\n                            maxLength: { value: 500, message: \"Max 500 characters only\" },\r\n                          }),\r\n                        }}\r\n                      />\r\n                    </Tooltip>\r\n                    {errors.techStack && (\r\n                      <span className=\"team-error\">{errors.techStack.message}</span>\r\n                    )}\r\n                  </Grid>\r\n                  {/* <Grid item xs={12}>\r\n                    <h3 className=\"file-gradient-head\">\r\n                      Source Code upload{\" \"}\r\n                      {!zipUpload ? (\r\n                        \" (Not uploaded)\"\r\n                      ) : (\r\n                        <IconButton\r\n                          style={{ padding: 0, marginLeft: \"10px\" }}\r\n                          onClick={handleZipDownload}\r\n                        >\r\n                          <GetApp />\r\n                        </IconButton>\r\n                      )}\r\n                    </h3>\r\n                    <input\r\n                      type=\"file\"\r\n                      accept=\".zip,.rar\"\r\n                      style={{ marginBottom: \"1em\" }}\r\n                      onChange={handleFile}\r\n                    />\r\n                  </Grid> */}\r\n                </Grid>\r\n              </Grid>\r\n              <Grid item xs={12} sm={6} className=\"sub-side\">\r\n                <Grid container spacing={2}>\r\n                  <Grid item xs={12}>\r\n                    <TextInput\r\n                      multiline\r\n                      variant=\"outlined\"\r\n                      label=\"Description\"\r\n                      onChange={(event) => {\r\n                        setMarkdown(event.target.value);\r\n                      }}\r\n                      helperText={\r\n                        <a\r\n                          href=\"https://github.github.com/gfm/\"\r\n                          style={{ textDecoration: \"none\", color: \"#FFF\", fontWeight: 600 }}\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          Markdown Supported\r\n                        </a>\r\n                      }\r\n                      inputProps={{\r\n                        ...register(\"description\", {\r\n                          required: { value: true, message: \"Please fill this field!\" },\r\n                        }),\r\n                      }}\r\n                      rows={15}\r\n                    />\r\n                    {errors.description && (\r\n                      <span className=\"team-error\">{errors.description.message}</span>\r\n                    )}\r\n                  </Grid>\r\n                  <Grid item xs={12}>\r\n                    <button\r\n                      className=\"team-primary-btn submit-btn\"\r\n                      type=\"submit\"\r\n                      disabled={loading}\r\n                    >\r\n                      {loading ? (\r\n                        <CircularProgress color=\"secondary\" size={24} />\r\n                      ) : (\r\n                        \"Submit Project\"\r\n                      )}\r\n                    </button>\r\n                    {/* Project submissions closed! Stay tuned! */}\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          sm={12}\r\n          md={5}\r\n          style={{\r\n            backgroundColor: \"#1c006f88\",\r\n            padding: 25,\r\n            borderRadius: 25,\r\n            maxHeight: \"75vh\",\r\n          }}\r\n        >\r\n          <label className=\"MuiFormLabel-root\">Idea Preview </label>\r\n          {markdown === \"\" ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: \"1.5rem\",\r\n                fontWeight: 600,\r\n              }}\r\n            >\r\n              No Content Yet\r\n            </div>\r\n          ) : (\r\n            <div style={{ overflow: \"auto\", maxHeight: \"calc(100% - 10px)\" }}>\r\n              <ReactMarkdown plugins={[gfm]} children={markdown} />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Hidden xsDown>\r\n        <Grid item md={6}>\r\n          <img\r\n            style={{\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"100%\",\r\n              height: \"auto\",\r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n              zIndex: -1,\r\n              filter: \"brightness(0.7)\",\r\n            }}\r\n            src={salty}\r\n            alt={\"\"}\r\n            className=\"From-img\"\r\n          />\r\n        </Grid>\r\n      </Hidden>\r\n      <Snackbar\r\n        open={successSnack}\r\n        onClose={() => setSuccessSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"success\" onClose={() => setSuccessSnack(false)}>\r\n          Project Submitted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={errorSnack}\r\n        onClose={() => setErrorSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"error\" onClose={() => setErrorSnack(false)}>\r\n          {errorText}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default FinalSubmission;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Dashboard\\Dashboard.jsx",["139","140","141"],"import React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport \"./Dashboard.css\";\r\nimport salty from './Dashboard.png';\r\nimport Countdown from 'react-countdown';\r\n\r\n\r\nfunction Dashboard({ data, refresh }) {\r\n  const [alreadyJoined, setAlreadyJoined] = useState(false);\r\n  const [hackBegin, setHack] = useState(false);\r\n  const [timer, setTimer] = useState(0);\r\n  const [hrs, setHrs] = useState(0);\r\n  const [min, setMin] = useState(0);\r\n  const [sec, setSec] = useState(0);\r\n  \r\nvar date1 = new Date();\r\nvar date2 = new Date(\"04/15/2022\");\r\nvar Difference_In_Time = date2.getTime() - date1.getTime();\r\n\r\n  useEffect(() => {\r\n    if (data.message && data.message === \"Not in a team\") {\r\n      setAlreadyJoined(false);\r\n    } else {\r\n      setAlreadyJoined(true);\r\n    }\r\n  }, [data]);\r\n\r\n  const history = useHistory();\r\n\r\n  var hackTimer;\r\n  useEffect(() => {\r\n    const start = new Date();\r\n    start.setFullYear(2022, 4, 15);\r\n    start.setHours(18);\r\n    start.setMinutes(0);\r\n    start.setSeconds(0);\r\n    const Now = new Date();\r\n    const diff = (start - Now) / 1000;\r\n    // console.log(diff);\r\n    if (start - Now > 0) {\r\n      setTimer(diff);\r\n    } else {\r\n      const end = new Date();\r\n      end.setFullYear(2022, 4, 18);\r\n      end.setHours(20);\r\n      end.setMinutes(0);\r\n      end.setSeconds(0);\r\n      const newdiff = (end - Now) / 1000;\r\n      // console.log(newdiff);\r\n      setTimer(newdiff);\r\n      setHack(true);\r\n    }\r\n\r\n    clearInterval(hackTimer);\r\n    //eslint-disable-next-line\r\n    hackTimer = setInterval(() => {\r\n      setTimer((prev) => prev - 1);\r\n    }, 1000);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (timer > 86400) {\r\n      setHrs(Math.floor(timer / 86400)); // Actually Days\r\n      setMin(Math.floor((timer - 86400 * Math.floor(timer / 86400)) / 3600)); // Actually Hours\r\n      setSec(\r\n        Math.floor(\r\n          (timer -\r\n            (3600 * Math.floor((timer - 86400 * Math.floor(timer / 86400)) / 3600) +\r\n              86400 * Math.floor(timer / 86400))) /\r\n            60\r\n        )\r\n      ); // Actually Min\r\n    } else {\r\n      setHrs(Math.floor(timer / 3600)); // Hours\r\n      setMin(Math.floor((timer - 3600 * Math.floor(timer / 3600)) / 60)); // Min\r\n      setSec(\r\n        Math.floor(\r\n          timer -\r\n            (60 * Math.floor((timer - 3600 * Math.floor(timer / 3600)) / 60) +\r\n              3600 * Math.floor(timer / 3600))\r\n        )\r\n      ); // Sec\r\n    }\r\n  }, [timer]);\r\n\r\n  return (\r\n    <div className=\"team-container\">\r\n      <img\r\n            style={{\r\n              height: \"100vh\",\r\n              margin: \"0\",\r\n              width: \"100vw\",\r\n              padding: \"0\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"cover\",\r\n              filter: \"brightness(0.7)\",\r\n             \r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n              zIndex: -1,\r\n            }}\r\n            src={salty}\r\n            alt={\"\"}\r\n            className=\"From-img\"\r\n          />\r\n      <div className=\"team-div\">\r\n        <div className=\"dashhack\">{!hackBegin ? \"Hack Starts in\" : \"Hack ends in\"}</div>\r\n        <div className=\"counter\">\r\n          <div className=\"clock\">\r\n            <Countdown date={Date.now() + Difference_In_Time} />\r\n            {/* <div className=\"clock-item\">\r\n              {hrs.toLocaleString(\"en-US\", {\r\n                minimumIntegerDigits: 2,\r\n                useGrouping: false,\r\n              })}{\" \"}\r\n              <span className=\"clock-label\">HOURS</span>\r\n            </div>\r\n            :{\" \"}\r\n            <div className=\"clock-item\">\r\n              {min.toLocaleString(\"en-US\", {\r\n                minimumIntegerDigits: 2,\r\n                useGrouping: false,\r\n              })}{\" \"}\r\n              <span className=\"clock-label\">MINUTES</span>\r\n            </div>\r\n            :{\" \"}\r\n            <div className=\"clock-item\">\r\n              {sec.toLocaleString(\"en-US\", {\r\n                minimumIntegerDigits: 2,\r\n                useGrouping: false,\r\n              })}{\" \"}\r\n              <span className=\"clock-label\">SECONDS</span>\r\n            </div> */}\r\n          </div>\r\n        </div>\r\n        {!alreadyJoined ? (\r\n          <>\r\n            <h3 style={{ marginBottom: \"30px\", marginTop: \"20px\" }}>Meanwhile, we recommend you</h3>\r\n            <div className=\"team-btn-div\">\r\n              <button className=\"team-primary-btn\" onClick={() => history.push(\"/app/team\")}>\r\n                Form your Team now!\r\n              </button>\r\n            </div>\r\n          </>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {/* <div className=\"clock\">Hack has Ended</div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\SubmitSection\\SubmitSection.jsx",["142"],"import { Route, Switch } from \"react-router\";\r\nimport ProjectSubmission from \"../ProjectSubmission/ProjectSubmission\";\r\nimport IdeaSubmission from \"../IdeaSubmission/IdeaSubmission\";\r\n\r\nfunction SubmitSection({ data, refresh }) {\r\n  return (\r\n    <div className=\"team-container sub-container\">\r\n      <Switch>\r\n        <Route\r\n          exact\r\n          path=\"/app/submission\"\r\n          component={(props) => <IdeaSubmission {...props} data={data} refresh={refresh} />}\r\n        ></Route>\r\n        {/* <Route\r\n          exact\r\n          path=\"/app/submission/project\"\r\n          component={(props) => <ProjectSubmission {...props} data={data} refresh={refresh} />}\r\n        ></Route> */}\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SubmitSection;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\TopNav\\TopNav.jsx",["143"],"import { Avatar, Dialog, DialogContent, Hidden, SvgIcon } from \"@material-ui/core\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./TopNav.css\";\r\nimport logo from './DEVSOCLogo.png';\r\n\r\nfunction TopNav({ data }) {\r\n  const history = useHistory();\r\n  const path = history.location.pathname;\r\n\r\n  const [open, setOpen] = useState(false);\r\n  return (\r\n    <div style={{ padding: \"0 3%\" }}>\r\n      <h1 className=\"devsoc21\">\r\n        <Link to=\"/app/dashboard\" style={{ textDecoration: \"none\", width: \"fit-content\" }}>\r\n          <img src={logo} width={150}></img>\r\n          {/* DEVSOC'21 */}\r\n        </Link>\r\n      </h1>\r\n      <h1 className=\"page-title\">\r\n        {path === \"/app/team\"\r\n          ? \"My Team\"\r\n          : path === \"/app/dashboard\"\r\n          ? \"Dashboard\"\r\n          : path === \"/app/submission\"\r\n          ? \"Idea Submission\"\r\n          : path === \"/app/profile\" || path === \"/app/profile/edit\"\r\n          ? \"Profile\"\r\n          : \"\"}\r\n      </h1>\r\n      {history.location.pathname === \"/app/profile\" ? (\r\n        <Hidden xsDown>\r\n          <button\r\n            className=\"user-btn\"\r\n            onClick={() => {\r\n              setOpen(true);\r\n            }}\r\n          >\r\n            <Avatar alt={data.name} variant=\"circular\" src={data.avatar} />\r\n          </button>\r\n        </Hidden>\r\n      ) : (\r\n        <button\r\n          className=\"user-btn\"\r\n          onClick={() => {\r\n            setOpen(true);\r\n          }}\r\n        >\r\n          <Avatar alt={data.name} variant=\"circular\" src={data.avatar} />\r\n        </button>\r\n      )}\r\n      <Dialog\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n        }}\r\n        className=\"create-team-modal\"\r\n        fullWidth\r\n        PaperProps={{ className: \"dialog-paper\" }}\r\n      >\r\n        <DialogContent\r\n          style={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            flexDirection: \"column\",\r\n          }}\r\n        >\r\n          <h3>Hello, {data.name}</h3>\r\n          <Link\r\n            to=\"/app/profile\"\r\n            style={{ textDecoration: \"none\", width: \"100%\" }}\r\n            onClick={() => setOpen(false)}\r\n          >\r\n            <button className=\"team-primary-btn modal-input\">\r\n              <SvgIcon viewBox=\"0 0 44 44\" fill=\"none\">\r\n                <path\r\n                  d=\"M36.6666 38.5V34.8333C36.6666 32.8884 35.894 31.0232 34.5187 29.6479C33.1434 28.2726 31.2782 27.5 29.3333 27.5H14.6666C12.7217 27.5 10.8564 28.2726 9.48114 29.6479C8.10587 31.0232 7.33325 32.8884 7.33325 34.8333V38.5\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"4\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                  fill=\"none\"\r\n                />\r\n                <path\r\n                  d=\"M22.0001 20.1667C26.0502 20.1667 29.3334 16.8834 29.3334 12.8333C29.3334 8.78325 26.0502 5.5 22.0001 5.5C17.95 5.5 14.6667 8.78325 14.6667 12.8333C14.6667 16.8834 17.95 20.1667 22.0001 20.1667Z\"\r\n                  stroke=\"white\"\r\n                  strokeWidth=\"4\"\r\n                  fill=\"none\"\r\n                  strokeLinecap=\"round\"\r\n                  strokeLinejoin=\"round\"\r\n                />\r\n              </SvgIcon>\r\n              Profile\r\n            </button>\r\n          </Link>\r\n          <button\r\n            className=\"team-primary-btn modal-input\"\r\n            onClick={() => {\r\n              localStorage.removeItem(\"authToken\");\r\n              history.push(\"/\");\r\n            }}\r\n          >\r\n            <SvgIcon viewBox=\"0 0 49 44\">\r\n              <path\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n                d=\"M25.125 29.75V32.0625C25.125 33.9024 24.3941 35.667 23.0931 36.9681C21.792 38.2691 20.0274 39 18.1875 39H8.9375C7.09756 39 5.33298 38.2691 4.03195 36.9681C2.73091 35.667 2 33.9024 2 32.0625V8.9375C2 7.09756 2.73091 5.33298 4.03195 4.03195C5.33298 2.73091 7.09756 2 8.9375 2H18.1875C20.0274 2 21.792 2.73091 23.0931 4.03195C24.3941 5.33298 25.125 7.09756 25.125 8.9375V11.25M34.375 29.75L43.625 20.5L34.375 29.75ZM43.625 20.5L34.375 11.25L43.625 20.5ZM43.625 20.5H11.25H43.625Z\"\r\n                stroke=\"white\"\r\n                strokeWidth=\"3\"\r\n                fill=\"none\"\r\n                strokeLinecap=\"round\"\r\n                strokeLinejoin=\"round\"\r\n              />\r\n            </SvgIcon>\r\n            Logout\r\n          </button>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TopNav;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\BottomNav\\BottomNav.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\TeamCard\\TeamCard.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\IdeaSubmission\\IdeaSubmission.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\ProjectSubmission\\ProjectSubmission.jsx",["144"],"import React from \"react\";\r\nimport salty from \"../IdeaSubmission/Saly-16.svg\";\r\nimport TextInput from \"../../Components/TextInput/TextInput\";\r\nimport { CircularProgress, Grid, Hidden, MenuItem, Snackbar } from \"@material-ui/core\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router\";\r\nimport { useGoogleReCaptcha } from \"react-google-recaptcha-v3\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport gfm from \"remark-gfm\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { ExpandMore } from \"@material-ui/icons\";\r\n// import \"./Idea.css\";\r\n\r\nfunction IdeaSubmission({ data, refresh }) {\r\n  const {\r\n    handleSubmit,\r\n    formState: { errors },\r\n    register,\r\n    setValue,\r\n  } = useForm();\r\n\r\n  const history = useHistory();\r\n\r\n  const { executeRecaptcha } = useGoogleReCaptcha();\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [markdown, setMarkdown] = useState(\"\");\r\n  const [successSnack, setSuccessSnack] = useState(false);\r\n  const [errorSnack, setErrorSnack] = useState(false);\r\n  const [errorText, setErrorText] = useState(\"\");\r\n\r\n  const onSubmit = async (data) => {\r\n    setLoading(true);\r\n    let captcha = await executeRecaptcha(\"/\");\r\n    var update = { ...data, captcha };\r\n    // console.log(update);\r\n    const token = localStorage.getItem(\"authToken\");\r\n    try {\r\n      await axios\r\n        .post(`${process.env.REACT_APP_BACKEND_URL}/team/saveidea`, update, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        })\r\n        .then((data) => {\r\n          // console.log(data);\r\n          setSuccessSnack(true);\r\n          refresh(true);\r\n          // history.push(\"/app/profile\");\r\n        });\r\n    } catch (error) {\r\n      if (error.response.status == 409) {\r\n        setErrorText(\"Time Size should be 2 to 5 members!\");\r\n        setErrorSnack(true);\r\n      } else {\r\n        setErrorText(\"Something went wrong, please try again!\");\r\n        setErrorSnack(true);\r\n      }\r\n    }\r\n    setLoading(false);\r\n  };\r\n\r\n  const initialise = () => {\r\n    // console.log(data);\r\n    if (data.teams && data.teams.submission) {\r\n      setValue(\"name\", data.teams.submission.name);\r\n      setValue(\"description\", data.teams.submission.description);\r\n      setMarkdown(data.teams.submission.description);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    initialise();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  if (data.message) {\r\n    return (\r\n      <div>\r\n        <>\r\n          <div className=\"dashset\">Idea Submissions have started</div>\r\n          <div className=\"dashset\">\r\n            To submit yours <ExpandMore fontSize={\"large\"} />\r\n          </div>\r\n          <div className=\"team-btn-div\">\r\n            <button className=\"team-primary-btn\" onClick={() => history.push(\"/app/team\")}>\r\n              Form your Team now!\r\n            </button>\r\n          </div>\r\n        </>\r\n\r\n        <img\r\n          style={{\r\n            maxWidth: \"100%\",\r\n            maxHeight: \"100%\",\r\n            height: \"auto\",\r\n            position: \"fixed\",\r\n            bottom: \"0\",\r\n            right: \"0\",\r\n            zIndex: -1,\r\n            filter: \"brightness(0.7)\",\r\n          }}\r\n          src={salty}\r\n          alt={\"\"}\r\n          className=\"From-img\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"team-joined-div\">\r\n      <Grid container>\r\n        <Grid item xs={12} md={4} lg={3}>\r\n          <form onSubmit={handleSubmit(onSubmit)}>\r\n            <Grid item container xs={12} spacing={2} className=\"sub-side\">\r\n              <Grid item xs={12}>\r\n                <TextInput\r\n                  select\r\n                  label=\"Track\"\r\n                  variant=\"outlined\"\r\n                  defaultValue={\r\n                    data.teams && data.teams.submission ? data.teams.submission.track : \"\"\r\n                  }\r\n                  inputProps={{ ...register(\"track\", { required: true }) }}\r\n                >\r\n                  <MenuItem key={0} value=\"ar-vr\">\r\n                    Best of AR/VR\r\n                  </MenuItem>\r\n                  <MenuItem key={1} value=\"fun\">\r\n                    Most Fun!\r\n                  </MenuItem>\r\n                  <MenuItem key={2} value=\"health\">\r\n                    Health and Wellness + Medical\r\n                  </MenuItem>\r\n                  <MenuItem key={3} value=\"devtools\">\r\n                    DevTools\r\n                  </MenuItem>\r\n                  <MenuItem key={4} value=\"openInnovation\">\r\n                    Open Innovation\r\n                  </MenuItem>\r\n                  <MenuItem key={5} value=\"socialGood\">\r\n                    Best Social Good Hack\r\n                  </MenuItem>\r\n                  <MenuItem key={6} value=\"blockchain\">\r\n                    Blockchain\r\n                  </MenuItem>\r\n                </TextInput>\r\n                {errors.track && (\r\n                  <span className=\"team-error\">Please Select a your preferred track!</span>\r\n                )}\r\n              </Grid>\r\n              <Grid item xs={12} style={{ paddingTop: 12 }}>\r\n                <TextInput\r\n                  label=\"Project Name\"\r\n                  variant=\"outlined\"\r\n                  inputProps={{\r\n                    ...register(\"name\", {\r\n                      required: { value: true, message: \"This field is required\" },\r\n                      maxLength: { value: 100, message: \"Max 100 characters only\" },\r\n                    }),\r\n                  }}\r\n                />\r\n                {errors.name && <span className=\"team-error\">{errors.name.message}</span>}\r\n              </Grid>\r\n              <Grid item xs={12}>\r\n                <TextInput\r\n                  multiline\r\n                  variant=\"outlined\"\r\n                  label=\"Description\"\r\n                  onChange={(event) => {\r\n                    setMarkdown(event.target.value);\r\n                  }}\r\n                  helperText={\r\n                    <a\r\n                      href=\"https://github.github.com/gfm/\"\r\n                      style={{ textDecoration: \"none\", color: \"#FFF\", fontWeight: 600 }}\r\n                      target=\"_blank\"\r\n                      rel=\"noreferrer\"\r\n                    >\r\n                      Markdown Supported\r\n                    </a>\r\n                  }\r\n                  inputProps={{\r\n                    ...register(\"description\", {\r\n                      required: { value: true, message: \"Please fill this field!\" },\r\n                    }),\r\n                  }}\r\n                  rows={10}\r\n                />\r\n                {errors.description && (\r\n                  <span className=\"team-error\">{errors.description.message}</span>\r\n                )}\r\n              </Grid>\r\n              <button className=\"team-primary-btn submit-btn\" type=\"submit\" disabled={loading}>\r\n                {loading ? <CircularProgress color=\"secondary\" size={24} /> : \"Submit Idea\"}\r\n              </button>\r\n              <Grid item xs={12}>\r\n                <div>\r\n                  Once the idea is submitted, you will not be able to join/ leave this team or\r\n                  invite/remove someone from your team.\r\n                </div>\r\n              </Grid>\r\n            </Grid>\r\n          </form>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          md={8}\r\n          lg={9}\r\n          style={{\r\n            backgroundColor: \"#1c006f88\",\r\n            padding: 25,\r\n            borderRadius: 25,\r\n            maxHeight: \"75vh\",\r\n          }}\r\n        >\r\n          <label className=\"MuiFormLabel-root\">Idea Preview </label>\r\n          {markdown === \"\" ? (\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                fontSize: \"2rem\",\r\n                fontWeight: 600,\r\n              }}\r\n            >\r\n              No Content Yet\r\n            </div>\r\n          ) : (\r\n            <div style={{ overflow: \"auto\", maxHeight: \"calc(100% - 10px)\" }}>\r\n              <ReactMarkdown plugins={[gfm]} children={markdown} />\r\n            </div>\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Hidden xsDown>\r\n        <Grid item md={6}>\r\n          <img\r\n            style={{\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"100%\",\r\n              height: \"auto\",\r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n              filter: \"brightness(0.7)\",\r\n              zIndex: -1,\r\n            }}\r\n            src={salty}\r\n            alt={\"\"}\r\n            className=\"From-img\"\r\n          />\r\n        </Grid>\r\n      </Hidden>\r\n      <Snackbar\r\n        open={successSnack}\r\n        onClose={() => setSuccessSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"success\" onClose={() => setSuccessSnack(false)}>\r\n          Idea Submitted successfully!\r\n        </Alert>\r\n      </Snackbar>\r\n      <Snackbar\r\n        open={errorSnack}\r\n        onClose={() => setErrorSnack(false)}\r\n        autoHideDuration={3000}\r\n        className=\"snackbar\"\r\n      >\r\n        <Alert variant=\"filled\" severity=\"error\" onClose={() => setErrorSnack(false)}>\r\n          {errorText}\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default IdeaSubmission;\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\TextInput\\TextInput.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\ProfileEdit\\ProfileEdit.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Pages\\Profile\\Profile.jsx",["145","146","147"],"import React from \"react\";\r\nimport { Avatar, Grid, Hidden } from \"@material-ui/core\";\r\nimport \"./Profile.css\";\r\nimport back from \"./Profile.png\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { GitHub, LinkedIn } from \"@material-ui/icons\";\r\nimport { useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Profile({ data }) {\r\n  const history = useHistory();\r\n  // console.log(data);\r\n  const getString = (num) => {\r\n    switch (num) {\r\n      case 1:\r\n        return \"First Year\";\r\n      case 2:\r\n        return \"Second Year\";\r\n      case 3:\r\n        return \"Third Year\";\r\n      case 4:\r\n        return \"Fourth Year\";\r\n      case 5:\r\n        return \"Fifth Year\";\r\n      default:\r\n        return \"\";\r\n    }\r\n  };\r\n\r\n  const certificate = async () => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    await axios\r\n      .get(`${process.env.REACT_APP_BACKEND_URL}/user/generateCertificate`, {\r\n        headers: { Authorization: `Bearer ${token}` },\r\n      })\r\n      .then((data) => {\r\n        window.open(data.data.certificate);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!data.is_profile_completed) {\r\n      history.push(\"/app/profile/edit\");\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"team-joined-div\">\r\n      <div className=\"profile-avatar\">\r\n        <Avatar\r\n          className=\"user_profile_picture\"\r\n          alt={data.name}\r\n          variant=\"circular\"\r\n          src={data.avatar}\r\n        />\r\n      </div>\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} md={12} lg={24} className=\"profile-data\">\r\n\r\n          <h1 className=\"users-name\">{data.name}</h1>\r\n          <p><a className=\"users-email\" href={data.email}>{data.email}</a></p>\r\n          <p className=\"users-phone\">{data.mobile}</p>\r\n          {/* <div className=\"social\">\r\n            {data.personal.website === \"\" ? (\r\n              <></>\r\n            ) : (\r\n              <a href={data.personal?.website} target=\"_blank\" rel=\"noreferrer\">\r\n                <h3>{data.personal?.website}</h3>\r\n              </a>\r\n            )}\r\n          </div> */}\r\n          {/* <h3>\r\n            {data.college}: {getString(data.collegeYear)}\r\n          </h3> */}\r\n          {/* <h3>{data.bio}</h3> */}\r\n          <div className=\"social\">\r\n            {data.personal.github === \"\" ? (\r\n              <></>\r\n            ) : (\r\n              <a href={data.personal?.github} target=\"_blank\" rel=\"noreferrer\">\r\n                <GitHub />\r\n              </a>\r\n            )}\r\n            {data.personal.linkedin === \"\" ? (\r\n              <></>\r\n            ) : (\r\n              <a href={data.personal?.linkedin} target=\"_blank\" rel=\"noreferrer\">\r\n                <LinkedIn />\r\n              </a>\r\n            )}\r\n          </div>\r\n          <Link to=\"/app/profile/edit\">\r\n            <button className=\"team-primary-btn profile-btn\">Edit Profile</button>\r\n          </Link>\r\n          <br />\r\n          <br />\r\n          {/* {data.show_certificate ? (\r\n            <button className=\"team-primary-btn profile-btn\" onClick={certificate}>\r\n              Download Certificate\r\n            </button>\r\n          ) : (\r\n            <></>\r\n          )} */}\r\n          <Hidden smUp>\r\n            <button\r\n              className=\"team-primary-btn profile-btn\"\r\n              style={{ margin: \"5px auto\" }}\r\n              onClick={() => {\r\n                localStorage.removeItem(\"authToken\");\r\n                history.push(\"/\");\r\n              }}\r\n            >\r\n              Logout\r\n            </button>\r\n          </Hidden>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Hidden xsDown>\r\n        <Grid item md={6}>\r\n          <img\r\n            style={{\r\n              height: \"100vh\",\r\n              margin: \"0\",\r\n              width: \"100vw\",\r\n              padding: \"0\",\r\n              backgroundRepeat: \"no-repeat\",\r\n              backgroundSize: \"cover\",\r\n              filter:\"brightness(0.7)\",\r\n              \r\n\r\n\r\n              position: \"fixed\",\r\n              bottom: \"0\",\r\n              right: \"0\",\r\n              zIndex: -1,\r\n            }}\r\n            src={back}\r\n            alt={\"\"}\r\n            className=\"From-img\"\r\n          />\r\n        </Grid>\r\n      </Hidden>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\JoinTeamModal\\JoinTeamModal.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\RemoveMemberModal\\RemoveMember.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\InviteModal\\InviteModal.jsx",[],"C:\\Users\\thama\\Desktop\\Main2\\DEVSOC-Main-Portal\\src\\Components\\CreateTeamModal\\CreateTeamModal.jsx",[],{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","severity":1,"message":"153","line":34,"column":7,"nodeType":"154","messageId":"155","endLine":34,"endColumn":65,"fix":"156"},{"ruleId":"157","severity":1,"message":"158","line":53,"column":9,"nodeType":"154","endLine":53,"endColumn":42},{"ruleId":"157","severity":1,"message":"158","line":59,"column":11,"nodeType":"154","endLine":59,"endColumn":45},{"ruleId":"159","severity":1,"message":"160","line":16,"column":10,"nodeType":"161","messageId":"162","endLine":16,"endColumn":15},{"ruleId":"163","severity":1,"message":"164","line":42,"column":6,"nodeType":"165","endLine":42,"endColumn":14,"suggestions":"166"},{"ruleId":"157","severity":1,"message":"158","line":76,"column":11,"nodeType":"154","endLine":76,"endColumn":39},{"ruleId":"159","severity":1,"message":"167","line":1,"column":10,"nodeType":"161","messageId":"162","endLine":1,"endColumn":19},{"ruleId":"159","severity":1,"message":"168","line":1,"column":27,"nodeType":"161","messageId":"162","endLine":1,"endColumn":33},{"ruleId":"157","severity":1,"message":"158","line":33,"column":11,"nodeType":"154","endLine":33,"endColumn":39},{"ruleId":"159","severity":1,"message":"168","line":1,"column":34,"nodeType":"161","messageId":"162","endLine":1,"endColumn":40},{"ruleId":"159","severity":1,"message":"169","line":8,"column":3,"nodeType":"161","messageId":"162","endLine":8,"endColumn":13},{"ruleId":"159","severity":1,"message":"170","line":23,"column":22,"nodeType":"161","messageId":"162","endLine":23,"endColumn":28},{"ruleId":"159","severity":1,"message":"171","line":43,"column":10,"nodeType":"161","messageId":"162","endLine":43,"endColumn":19},{"ruleId":"159","severity":1,"message":"172","line":45,"column":9,"nodeType":"161","messageId":"162","endLine":45,"endColumn":19},{"ruleId":"159","severity":1,"message":"173","line":53,"column":9,"nodeType":"161","messageId":"162","endLine":53,"endColumn":26},{"ruleId":"159","severity":1,"message":"174","line":12,"column":10,"nodeType":"161","messageId":"162","endLine":12,"endColumn":13},{"ruleId":"159","severity":1,"message":"175","line":13,"column":10,"nodeType":"161","messageId":"162","endLine":13,"endColumn":13},{"ruleId":"159","severity":1,"message":"176","line":14,"column":10,"nodeType":"161","messageId":"162","endLine":14,"endColumn":13},{"ruleId":"159","severity":1,"message":"177","line":2,"column":8,"nodeType":"161","messageId":"162","endLine":2,"endColumn":25},{"ruleId":"157","severity":1,"message":"158","line":17,"column":11,"nodeType":"154","endLine":17,"endColumn":39},{"ruleId":"178","severity":1,"message":"179","line":53,"column":33,"nodeType":"180","messageId":"181","endLine":53,"endColumn":35},{"ruleId":"159","severity":1,"message":"182","line":13,"column":9,"nodeType":"161","messageId":"162","endLine":13,"endColumn":18},{"ruleId":"159","severity":1,"message":"183","line":30,"column":9,"nodeType":"161","messageId":"162","endLine":30,"endColumn":20},{"ruleId":"163","severity":1,"message":"184","line":46,"column":6,"nodeType":"165","endLine":46,"endColumn":8,"suggestions":"185"},"no-native-reassign",["186"],"no-negated-in-lhs",["187"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXOpeningElement","noTargetBlank",{"range":"188","text":"189"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'allTeams'. Either include it or remove the dependency array.","ArrayExpression",["190"],"'Container' is defined but never used.","'Hidden' is defined but never used.","'IconButton' is defined but never used.","'GetApp' is defined but never used.","'zipUpload' is assigned a value but never used.","'handleFile' is assigned a value but never used.","'handleZipDownload' is assigned a value but never used.","'hrs' is assigned a value but never used.","'min' is assigned a value but never used.","'sec' is assigned a value but never used.","'ProjectSubmission' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'getString' is assigned a value but never used.","'certificate' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'data.is_profile_completed' and 'history'. Either include them or remove the dependency array.",["191"],"no-global-assign","no-unsafe-negation",[1093,1093]," rel=\"noreferrer\"",{"desc":"192","fix":"193"},{"desc":"194","fix":"195"},"Update the dependencies array to be: [allTeams, search]",{"range":"196","text":"197"},"Update the dependencies array to be: [data.is_profile_completed, history]",{"range":"198","text":"199"},[1286,1294],"[allTeams, search]",[1214,1216],"[data.is_profile_completed, history]"]